{"uid":"e00ed231f4c68b74","name":"Создание и обновление статуса питомца","fullName":"tests.pet.test_pet.TestPet#test_update_pet_status","historyId":"df41a00215e76b3d29752da0473a0115","time":{"start":1743820189662,"stop":1743820199908,"duration":10246},"status":"failed","statusMessage":"AssertionError: Значение pending не равно ожидаемому sold","statusTrace":"self = <test_pet.TestPet object at 0x7f4a89dccd10>\nclient = <src.models.client.Client object at 0x7f4a89a45a00>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f4a89a46540>\npet_data = Pet(id=278, category=Category(id=844, name='Nathaniel Schultz'), name='Kevin Garrett', photoUrls=['https://picsum.photos/887/588'], tags=[Tag(id=681, name='Snow')], status='sold')\n\n    @allure.story(\"Обновление информации о питомцах\")\n    @allure.title(\"Создание и обновление статуса питомца\")\n    def test_update_pet_status(self, client, pet_helper, pet_data):\n    \twith allure.step(\"Создание питомца\"):\n    \t\tresponse = pet_helper.create_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.name, pet_data.name)\n    \n    \ttime.sleep(10)\n    \n    \twith allure.step(\"Обновление статуса питомца\"):\n    \t\tpet_data.status = PetStatus.SOLD.value\n    \t\tresponse = pet_helper.update_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.status, PetStatus.SOLD.value)\n    \n    \twith allure.step(\"Проверка обновления статуса питомца\"):\n    \t\tresponse = pet_helper.get_pet(client, pet_data.id)\n>   \t\tCustomAsserts.assert_equal(response.status, PetStatus.SOLD.value)\n\ntests/pet/test_pet.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/tech/custom_asserts.py:23: in assert_equal\n    _assert_equal(value, expected_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nval = 'pending', expected_val = 'sold'\n\n    @step(step_name)\n    def _assert_equal(val, expected_val):\n    \tif isinstance(val, str) or isinstance(expected_val, str):\n    \t\tval = str(val)\n    \t\texpected_val = str(expected_val)\n>   \tassert val == expected_val, f\"Значение {value} не равно ожидаемому {expected_value}\"\nE    AssertionError: Значение pending не равно ожидаемому sold\n\nsrc/tech/custom_asserts.py:21: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743820178759,"stop":1743820178761,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1743820178761,"stop":1743820178761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_helper","time":{"start":1743820178761,"stop":1743820178762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_data","time":{"start":1743820189660,"stop":1743820189661,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Значение pending не равно ожидаемому sold","statusTrace":"self = <test_pet.TestPet object at 0x7f4a89dccd10>\nclient = <src.models.client.Client object at 0x7f4a89a45a00>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f4a89a46540>\npet_data = Pet(id=278, category=Category(id=844, name='Nathaniel Schultz'), name='Kevin Garrett', photoUrls=['https://picsum.photos/887/588'], tags=[Tag(id=681, name='Snow')], status='sold')\n\n    @allure.story(\"Обновление информации о питомцах\")\n    @allure.title(\"Создание и обновление статуса питомца\")\n    def test_update_pet_status(self, client, pet_helper, pet_data):\n    \twith allure.step(\"Создание питомца\"):\n    \t\tresponse = pet_helper.create_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.name, pet_data.name)\n    \n    \ttime.sleep(10)\n    \n    \twith allure.step(\"Обновление статуса питомца\"):\n    \t\tpet_data.status = PetStatus.SOLD.value\n    \t\tresponse = pet_helper.update_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.status, PetStatus.SOLD.value)\n    \n    \twith allure.step(\"Проверка обновления статуса питомца\"):\n    \t\tresponse = pet_helper.get_pet(client, pet_data.id)\n>   \t\tCustomAsserts.assert_equal(response.status, PetStatus.SOLD.value)\n\ntests/pet/test_pet.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/tech/custom_asserts.py:23: in assert_equal\n    _assert_equal(value, expected_value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nval = 'pending', expected_val = 'sold'\n\n    @step(step_name)\n    def _assert_equal(val, expected_val):\n    \tif isinstance(val, str) or isinstance(expected_val, str):\n    \t\tval = str(val)\n    \t\texpected_val = str(expected_val)\n>   \tassert val == expected_val, f\"Значение {value} не равно ожидаемому {expected_value}\"\nE    AssertionError: Значение pending не равно ожидаемому sold\n\nsrc/tech/custom_asserts.py:21: AssertionError","steps":[{"name":"Создание питомца","time":{"start":1743820189662,"stop":1743820189744,"duration":82},"status":"passed","steps":[{"name":"Создание питомца","time":{"start":1743820189662,"stop":1743820189744,"duration":82},"status":"passed","steps":[{"name":"Статус код = 200","time":{"start":1743820189744,"stop":1743820189744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9a33737e8cd5eacf","name":"Request","source":"9a33737e8cd5eacf.txt","type":"text/plain","size":39},{"uid":"a947f774b6075e78","name":"Request headers","source":"a947f774b6075e78.json","type":"application/json","size":39},{"uid":"34c45bd6fbb59b05","name":"Request body","source":"34c45bd6fbb59b05.json","type":"application/json","size":258},{"uid":"7a0ebd3a46f53e71","name":"Response status code","source":"7a0ebd3a46f53e71.txt","type":"text/plain","size":3},{"uid":"db9b9742a5c89724","name":"Response Headers","source":"db9b9742a5c89724.json","type":"application/json","size":357},{"uid":"3ddf6a5455828a0a","name":"Response body","source":"3ddf6a5455828a0a.json","type":"application/json","size":258}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f4a89a45a00>"},{"name":"data","value":"Pet(id=278, category=Category(id=844, name='Nathaniel Schultz'), name='Kevin Garrett', photoUrls=['https://picsum.photos/887/588'], tags=[Tag(id=681, name='Snow')], status='pending')"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка, что 'Kevin Garrett' равно 'Kevin Garrett'","time":{"start":1743820189744,"stop":1743820189744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"val","value":"'Kevin Garrett'"},{"name":"expected_val","value":"'Kevin Garrett'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Обновление статуса питомца","time":{"start":1743820199744,"stop":1743820199826,"duration":82},"status":"passed","steps":[{"name":"Обновление информации о питомце","time":{"start":1743820199745,"stop":1743820199826,"duration":81},"status":"passed","steps":[{"name":"Статус код = 200","time":{"start":1743820199826,"stop":1743820199826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b25687b517c7bc13","name":"Request","source":"b25687b517c7bc13.txt","type":"text/plain","size":38},{"uid":"185b29f5b253e326","name":"Request headers","source":"185b29f5b253e326.json","type":"application/json","size":39},{"uid":"3fa4ea0bd2cdc0a7","name":"Request body","source":"3fa4ea0bd2cdc0a7.json","type":"application/json","size":255},{"uid":"addd0d675a49fc48","name":"Response status code","source":"addd0d675a49fc48.txt","type":"text/plain","size":3},{"uid":"d5dbaa8799f7d60d","name":"Response Headers","source":"d5dbaa8799f7d60d.json","type":"application/json","size":357},{"uid":"3839ceec0984b2c9","name":"Response body","source":"3839ceec0984b2c9.json","type":"application/json","size":255}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f4a89a45a00>"},{"name":"data","value":"Pet(id=278, category=Category(id=844, name='Nathaniel Schultz'), name='Kevin Garrett', photoUrls=['https://picsum.photos/887/588'], tags=[Tag(id=681, name='Snow')], status='sold')"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка, что 'sold' равно 'sold'","time":{"start":1743820199826,"stop":1743820199826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"val","value":"'sold'"},{"name":"expected_val","value":"'sold'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка обновления статуса питомца","time":{"start":1743820199826,"stop":1743820199908,"duration":82},"status":"failed","statusMessage":"AssertionError: Значение pending не равно ожидаемому sold\n","statusTrace":"  File \"/home/runner/work/python-pytest-api/python-pytest-api/tests/pet/test_pet.py\", line 99, in test_update_pet_status\n    CustomAsserts.assert_equal(response.status, PetStatus.SOLD.value)\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 23, in assert_equal\n    _assert_equal(value, expected_value)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 21, in _assert_equal\n    assert val == expected_val, f\"Значение {value} не равно ожидаемому {expected_value}\"\n           ^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Получение информации о питомце по ID","time":{"start":1743820199826,"stop":1743820199907,"duration":81},"status":"passed","steps":[{"name":"Статус код = 200","time":{"start":1743820199907,"stop":1743820199907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"35c8c47be0967baa","name":"Request","source":"35c8c47be0967baa.txt","type":"text/plain","size":42},{"uid":"754a91fdd82ceeca","name":"Request headers","source":"754a91fdd82ceeca.json","type":"application/json","size":39},{"uid":"82302d48f5d90b71","name":"Response status code","source":"82302d48f5d90b71.txt","type":"text/plain","size":3},{"uid":"5a18a57e2ff04fd4","name":"Response Headers","source":"5a18a57e2ff04fd4.json","type":"application/json","size":357},{"uid":"890928c09d7c5f7e","name":"Response body","source":"890928c09d7c5f7e.json","type":"application/json","size":258}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f4a89a45a00>"},{"name":"pet_id","value":"278"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},{"name":"Проверка, что 'pending' равно 'sold'","time":{"start":1743820199908,"stop":1743820199908,"duration":0},"status":"failed","statusMessage":"AssertionError: Значение pending не равно ожидаемому sold\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 21, in _assert_equal\n    assert val == expected_val, f\"Значение {value} не равно ожидаемому {expected_value}\"\n           ^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"val","value":"'pending'"},{"name":"expected_val","value":"'sold'"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"attachmentsCount":17,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"Pet"},{"name":"epic","value":"Petstore API"},{"name":"story","value":"Обновление информации о питомцах"},{"name":"parentSuite","value":"tests.pet"},{"name":"suite","value":"test_pet"},{"name":"subSuite","value":"TestPet"},{"name":"host","value":"fv-az2236-747"},{"name":"thread","value":"2336-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pet.test_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e00ed231f4c68b74.json","parameterValues":[]}