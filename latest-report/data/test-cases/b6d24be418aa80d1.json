{"uid":"b6d24be418aa80d1","name":"Создание заказа с невалидными данными","fullName":"tests.store.test_store.TestStore#test_create_order_with_invalid_data","historyId":"278cf9533d19079b37880aa5c655077e","time":{"start":1743820195838,"stop":1743820195923,"duration":85},"status":"failed","statusMessage":"AssertionError: Статус код 500 не равен ожидаемому 400","statusTrace":"self = <test_store.TestStore object at 0x7f4d6744a810>\nclient = <src.models.client.Client object at 0x7f4d6744ec00>\nstore_helper = <src.func.store.helpers.StoreHelper object at 0x7f4d67502150>\norder_data = Order(id=2025008213453549843908439809804398034593454536556445, petId=975, quantity=3, shipDate='2000-09-12T12:59:55.143371', status='delivered', complete=False)\n\n    @allure.title(\"Создание заказа с невалидными данными\")\n    def test_create_order_with_invalid_data(self, client, store_helper, order_data):\n    \torder_data.id = 2025008213453549843908439809804398034593454536556445\n>   \tresponse = store_helper.place_order(client, order_data, expected_status_code=400)\n\ntests/store/test_store.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/store/helpers.py:34: in place_order\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [500]>, expected_code = 400\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 500 не равен ожидаемому 400\n\nsrc/tech/custom_asserts.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743820178759,"stop":1743820178761,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1743820178761,"stop":1743820178761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"store_helper","time":{"start":1743820189933,"stop":1743820189934,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"order_data","time":{"start":1743820195836,"stop":1743820195837,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Статус код 500 не равен ожидаемому 400","statusTrace":"self = <test_store.TestStore object at 0x7f4d6744a810>\nclient = <src.models.client.Client object at 0x7f4d6744ec00>\nstore_helper = <src.func.store.helpers.StoreHelper object at 0x7f4d67502150>\norder_data = Order(id=2025008213453549843908439809804398034593454536556445, petId=975, quantity=3, shipDate='2000-09-12T12:59:55.143371', status='delivered', complete=False)\n\n    @allure.title(\"Создание заказа с невалидными данными\")\n    def test_create_order_with_invalid_data(self, client, store_helper, order_data):\n    \torder_data.id = 2025008213453549843908439809804398034593454536556445\n>   \tresponse = store_helper.place_order(client, order_data, expected_status_code=400)\n\ntests/store/test_store.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/store/helpers.py:34: in place_order\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [500]>, expected_code = 400\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 500 не равен ожидаемому 400\n\nsrc/tech/custom_asserts.py:51: AssertionError","steps":[{"name":"Создание заказа","time":{"start":1743820195838,"stop":1743820195923,"duration":85},"status":"failed","statusMessage":"AssertionError: Статус код 500 не равен ожидаемому 400\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/func/store/helpers.py\", line 34, in place_order\n    CustomAsserts.check_status_code(response, expected_status_code)\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 53, in check_status_code\n    _check_status_code(response, expected_status_code)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Статус код = 400","time":{"start":1743820195922,"stop":1743820195922,"duration":0},"status":"failed","statusMessage":"AssertionError: Статус код 500 не равен ожидаемому 400\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [500]>"},{"name":"expected_code","value":"400"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cee6b6c4506721df","name":"Request","source":"cee6b6c4506721df.txt","type":"text/plain","size":47},{"uid":"f5d15bb832c80a9b","name":"Request headers","source":"f5d15bb832c80a9b.json","type":"application/json","size":39},{"uid":"29f1886e299014e4","name":"Request body","source":"29f1886e299014e4.json","type":"application/json","size":187},{"uid":"9aad2faffb0aeae2","name":"Response status code","source":"9aad2faffb0aeae2.txt","type":"text/plain","size":3},{"uid":"c618a9a0ed08ffe9","name":"Response Headers","source":"c618a9a0ed08ffe9.json","type":"application/json","size":357},{"uid":"ac05314da3869c5","name":"Response body","source":"ac05314da3869c5.json","type":"application/json","size":77}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f4d6744ec00>"},{"name":"data","value":"Order(id=2025008213453549843908439809804398034593454536556445, petId=975, quantity=3, shipDate='2000-09-12T12:59:55.143371', status='delivered', complete=False)"},{"name":"expected_status_code","value":"400"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"Store"},{"name":"epic","value":"Petstore API"},{"name":"tag","value":"store"},{"name":"parentSuite","value":"tests.store"},{"name":"suite","value":"test_store"},{"name":"subSuite","value":"TestStore"},{"name":"host","value":"fv-az2236-747"},{"name":"thread","value":"2333-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.store.test_store"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["store"]},"source":"b6d24be418aa80d1.json","parameterValues":[]}