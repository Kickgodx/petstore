{"uid":"b10c58dbe48f7bb3","name":"Создание и обновление категории питомца","fullName":"tests.pet.test_pet.TestPet#test_update_pet_category","historyId":"fac325a2d622c78fe3960f5ffe417e24","time":{"start":1743820209865,"stop":1743820220103,"duration":10238},"status":"failed","statusMessage":"AssertionError: Статус код 404 не равен ожидаемому 200","statusTrace":"self = <test_pet.TestPet object at 0x7f130b4df3b0>\nclient = <src.models.client.Client object at 0x7f130b1370e0>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f130b1371a0>\npet_data = Pet(id=363, category=Category(id=2, name='Cat'), name='Kristen Bailey', photoUrls=['https://dummyimage.com/726x153'], tags=[Tag(id=462, name='DarkOrchid')], status='available')\n\n    @allure.story(\"Обновление информации о питомцах\")\n    @allure.title(\"Создание и обновление категории питомца\")\n    def test_update_pet_category(self, client, pet_helper, pet_data):\n    \twith allure.step(\"Создание питомца\"):\n    \t\tresponse = pet_helper.create_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.name, pet_data.name)\n    \n    \ttime.sleep(10)\n    \n    \twith allure.step(\"Обновление категории питомца\"):\n    \t\tnew_category = Category(id=2, name=\"Cat\")\n    \t\tpet_data.category = new_category\n    \t\tresponse = pet_helper.update_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.category.id, new_category.id)\n    \n    \twith allure.step(\"Проверка обновления категории питомца\"):\n>   \t\tresponse = pet_helper.get_pet(client, pet_data.id)\n\ntests/pet/test_pet.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/pet/helpers.py:25: in get_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [404]>, expected_code = 200\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 404 не равен ожидаемому 200\n\nsrc/tech/custom_asserts.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1743820178759,"stop":1743820178761,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"client","time":{"start":1743820178761,"stop":1743820178761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_helper","time":{"start":1743820178761,"stop":1743820178762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_data","time":{"start":1743820209863,"stop":1743820209865,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Статус код 404 не равен ожидаемому 200","statusTrace":"self = <test_pet.TestPet object at 0x7f130b4df3b0>\nclient = <src.models.client.Client object at 0x7f130b1370e0>\npet_helper = <src.func.pet.helpers.PetHelper object at 0x7f130b1371a0>\npet_data = Pet(id=363, category=Category(id=2, name='Cat'), name='Kristen Bailey', photoUrls=['https://dummyimage.com/726x153'], tags=[Tag(id=462, name='DarkOrchid')], status='available')\n\n    @allure.story(\"Обновление информации о питомцах\")\n    @allure.title(\"Создание и обновление категории питомца\")\n    def test_update_pet_category(self, client, pet_helper, pet_data):\n    \twith allure.step(\"Создание питомца\"):\n    \t\tresponse = pet_helper.create_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.name, pet_data.name)\n    \n    \ttime.sleep(10)\n    \n    \twith allure.step(\"Обновление категории питомца\"):\n    \t\tnew_category = Category(id=2, name=\"Cat\")\n    \t\tpet_data.category = new_category\n    \t\tresponse = pet_helper.update_pet(client, pet_data)\n    \t\tCustomAsserts.assert_equal(response.category.id, new_category.id)\n    \n    \twith allure.step(\"Проверка обновления категории питомца\"):\n>   \t\tresponse = pet_helper.get_pet(client, pet_data.id)\n\ntests/pet/test_pet.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/func/pet/helpers.py:25: in get_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\nsrc/tech/custom_asserts.py:53: in check_status_code\n    _check_status_code(response, expected_status_code)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresp = <Response [404]>, expected_code = 200\n\n    @step(f\"Статус код = {expected_status_code}\")\n    def _check_status_code(resp, expected_code):\n>   \tassert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\nE    AssertionError: Статус код 404 не равен ожидаемому 200\n\nsrc/tech/custom_asserts.py:51: AssertionError","steps":[{"name":"Создание питомца","time":{"start":1743820209865,"stop":1743820209943,"duration":78},"status":"passed","steps":[{"name":"Создание питомца","time":{"start":1743820209865,"stop":1743820209943,"duration":78},"status":"passed","steps":[{"name":"Статус код = 200","time":{"start":1743820209943,"stop":1743820209943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"a7b87ce1b6da180a","name":"Request","source":"a7b87ce1b6da180a.txt","type":"text/plain","size":39},{"uid":"92a725b0e0aa3e74","name":"Request headers","source":"92a725b0e0aa3e74.json","type":"application/json","size":39},{"uid":"f8f56fa7c97d447e","name":"Request body","source":"f8f56fa7c97d447e.json","type":"application/json","size":264},{"uid":"4fcf785fd81481c8","name":"Response status code","source":"4fcf785fd81481c8.txt","type":"text/plain","size":3},{"uid":"e628d55affbf123d","name":"Response Headers","source":"e628d55affbf123d.json","type":"application/json","size":357},{"uid":"b95c7b725ef6cc6c","name":"Response body","source":"b95c7b725ef6cc6c.json","type":"application/json","size":264}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f130b1370e0>"},{"name":"data","value":"Pet(id=363, category=Category(id=487, name='Brenda Pierce'), name='Kristen Bailey', photoUrls=['https://dummyimage.com/726x153'], tags=[Tag(id=462, name='DarkOrchid')], status='available')"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка, что 'Kristen Bailey' равно 'Kristen Bailey'","time":{"start":1743820209943,"stop":1743820209943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"val","value":"'Kristen Bailey'"},{"name":"expected_val","value":"'Kristen Bailey'"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Обновление категории питомца","time":{"start":1743820219943,"stop":1743820220021,"duration":78},"status":"passed","steps":[{"name":"Обновление информации о питомце","time":{"start":1743820219944,"stop":1743820220021,"duration":77},"status":"passed","steps":[{"name":"Статус код = 200","time":{"start":1743820220021,"stop":1743820220021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [200]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"238704a654644cf6","name":"Request","source":"238704a654644cf6.txt","type":"text/plain","size":38},{"uid":"82d2cbe585f1bf66","name":"Request headers","source":"82d2cbe585f1bf66.json","type":"application/json","size":39},{"uid":"9e343648a9984682","name":"Request body","source":"9e343648a9984682.json","type":"application/json","size":252},{"uid":"5c85793028866210","name":"Response status code","source":"5c85793028866210.txt","type":"text/plain","size":3},{"uid":"8efb6cd3fb3ccbc2","name":"Response Headers","source":"8efb6cd3fb3ccbc2.json","type":"application/json","size":357},{"uid":"2436b650b9e51c6d","name":"Response body","source":"2436b650b9e51c6d.json","type":"application/json","size":252}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f130b1370e0>"},{"name":"data","value":"Pet(id=363, category=Category(id=2, name='Cat'), name='Kristen Bailey', photoUrls=['https://dummyimage.com/726x153'], tags=[Tag(id=462, name='DarkOrchid')], status='available')"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка, что '2' равно '2'","time":{"start":1743820220021,"stop":1743820220021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"val","value":"2"},{"name":"expected_val","value":"2"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},{"name":"Проверка обновления категории питомца","time":{"start":1743820220021,"stop":1743820220103,"duration":82},"status":"failed","statusMessage":"AssertionError: Статус код 404 не равен ожидаемому 200\n","statusTrace":"  File \"/home/runner/work/python-pytest-api/python-pytest-api/tests/pet/test_pet.py\", line 191, in test_update_pet_category\n    response = pet_helper.get_pet(client, pet_data.id)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/func/pet/helpers.py\", line 25, in get_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 53, in check_status_code\n    _check_status_code(response, expected_status_code)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Получение информации о питомце по ID","time":{"start":1743820220021,"stop":1743820220102,"duration":81},"status":"failed","statusMessage":"AssertionError: Статус код 404 не равен ожидаемому 200\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/func/pet/helpers.py\", line 25, in get_pet\n    CustomAsserts.check_status_code(response, expected_status_code)\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 53, in check_status_code\n    _check_status_code(response, expected_status_code)\n  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Статус код = 200","time":{"start":1743820220102,"stop":1743820220102,"duration":0},"status":"failed","statusMessage":"AssertionError: Статус код 404 не равен ожидаемому 200\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.9/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-pytest-api/python-pytest-api/src/tech/custom_asserts.py\", line 51, in _check_status_code\n    assert resp.status_code == expected_code, f\"Статус код {resp.status_code} не равен ожидаемому {expected_code}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[],"attachments":[],"parameters":[{"name":"resp","value":"<Response [404]>"},{"name":"expected_code","value":"200"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ba0437e6f78c486f","name":"Request","source":"ba0437e6f78c486f.txt","type":"text/plain","size":42},{"uid":"e0f3c114d0732f9e","name":"Request headers","source":"e0f3c114d0732f9e.json","type":"application/json","size":39},{"uid":"ddeed7aaaa31afb5","name":"Response status code","source":"ddeed7aaaa31afb5.txt","type":"text/plain","size":3},{"uid":"7a0a61afafaebf35","name":"Response Headers","source":"7a0a61afafaebf35.json","type":"application/json","size":357},{"uid":"3a086dc6ddab16c1","name":"Response body","source":"3a086dc6ddab16c1.json","type":"application/json","size":64}],"parameters":[{"name":"client","value":"<src.models.client.Client object at 0x7f130b1370e0>"},{"name":"pet_id","value":"363"},{"name":"expected_status_code","value":"200"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":5,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":17,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"story","value":"Обновление информации о питомцах"},{"name":"feature","value":"Pet"},{"name":"epic","value":"Petstore API"},{"name":"parentSuite","value":"tests.pet"},{"name":"suite","value":"test_pet"},{"name":"subSuite","value":"TestPet"},{"name":"host","value":"fv-az2236-747"},{"name":"thread","value":"2330-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pet.test_pet"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"b10c58dbe48f7bb3.json","parameterValues":[]}