.common_telegram:
  stage: notify
  image: alpine/curl:latest
  before_script:
    - apk add --no-cache jq
  script:
    - |
      # Set default values
      TEST_ENVIRONMENT="${TEST_ENVIRONMENT:-Not specified}"
      TEST_NAME="${TEST_NAME:-Not specified}"
      CI_COMMIT_MESSAGE="${CI_COMMIT_MESSAGE:-No commit message}"

      # Prepare message text
      if [ "${TEST_STATUS}" = "success" ]; then
        MSG_HEADER="‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ ‚úÖ"
      else
        MSG_HEADER="‚ùå –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å ‚ùå"
      fi

      COMMIT_MSG=$(echo "${CI_COMMIT_MESSAGE}" | head -n 1)
      NOTIFICATION_TEXT="
      ${MSG_HEADER}

      <b>–ü—Ä–æ–µ–∫—Ç:</b> ${CI_PROJECT_NAME}
      <b>–í–µ—Ç–∫–∞:</b> ${CI_COMMIT_BRANCH}
      <b>–î–∂–æ–±–∞:</b> ${TEST_JOB_NAME}
      <b>–¢–µ—Å—Ç:</b> ${TEST_NAME}"
      <b>–ö–æ–º–º–∏—Ç:</b> ${COMMIT_MSG}
      "

      # Add environment info if flag is set
      if [ -n "${ENV_FLAG}" ]; then
        NOTIFICATION_TEXT="${NOTIFICATION_TEXT}
        <b>–û–∫—Ä—É–∂–µ–Ω–∏–µ:</b> ${TEST_ENVIRONMENT}
      fi

      # Send Telegram message
      curl -s -X POST "${TELEGRAM_API_URL}/bot${TG_DEVOPS_BOT_TOKEN}/sendMessage" \
        -H "Content-Type: application/json" \
        -d "$(jq -n \
          --arg chat_id "${CHAT_ID_AUTOTESTS}" \
          --arg text "${NOTIFICATION_TEXT}" \
          --arg report_link "${REPORT_LINK}" \
          --arg pipeline_link "${PIPELINE_LINK}" \
          --arg log_link "${LOG_LINK}" \
          '{
            "chat_id": $chat_id,
            "parse_mode": "HTML",
            "text": $text,
            "reply_markup": {
              "inline_keyboard": [
                [{"text": "üìä –û—Ç—á—ë—Ç", "url": $report_link}],
                [{"text": "üîß Pipeline", "url": $pipeline_link}],
                [{"text": "üìù –õ–æ–≥–∏", "url": $log_link}]
              ]
            }
          }')"
  extends:
    - .notifications-common

all_notification_with_env:
  variables:
    ENV_FLAG: "TRUE"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_ALL == "TRUE"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_ALL == "TRUE"'
      when: on_success
    - when: manual
  needs:
    - job: run_tests
    - job: make_allure_report
  extends:
    - .common_telegram